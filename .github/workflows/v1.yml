name: Keep Green

on:
  schedule:
    - cron: "*/1 * * * *"
  push:
    branches:
      - master

jobs:
  auto_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Debug Reference
        run: echo "::debug::Ref = ${{ github.ref }}"

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0 

      - name: Modify Last Update
        run: |
          d=$(date '+%Y-%m-%dT%H:%M:%SZ')
          echo "$d" > KEEP_GREEN_LOG

      - name: Check for Changes
        id: changes
        run: |
          set +e 
          git diff --exit-code > /dev/null
          if [ $? -ne 0 ]; then
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi
          set -e

      - name: Commit Changes
        if: env.changes_detected == 'true'
        run: |
          git config --local user.email "febridirgantara17@gmail.com"
          git config --local user.name "febrd"
          git add -A

          arr=("febrd(v1): 😂 Keep Green"
               "febrd(v1): 😱 Keep Green"
               "febrd(v1): 👿 Keep Green"
               "febrd(v1): 🙏 Keep Green"
               "febrd(v1): 🙈 Keep Green"
               "febrd(v1): 🐐 Keep Green"
               "febrd(v1): 🤖 Keep Green"
               "febrd(v1): 🟩 Keep Green"
               "febrd(v1): 👻 Keep Green")

          rand=$((RANDOM % ${#arr[@]}))
          git commit -m "${arr[$rand]}"

      - name: Pull Latest Changes
        if: env.changes_detected == 'true'
        run: |
          set +e 
          git pull origin master --rebase || {
            echo "Conflict detected, resolving..."
            git checkout --ours KEEP_GREEN_LOG
            git add KEEP_GREEN_LOG
            git rebase --continue
          }
          set -e
          
      - name: Push Changes
        if: env.changes_detected == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          directory: "."
          github_token: ${{ secrets.GITHUB_TOKEN }}
